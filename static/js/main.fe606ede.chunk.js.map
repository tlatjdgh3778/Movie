{"version":3,"sources":["components/GoodMovie.js","components/FilterNav.js","components/DisplayMovieMap.js","components/DisplayMovie.js","components/MovieSearch.js","components/MovieGenre.js","components/MovieVideos.js","components/MovieDetail.js","components/AlertModal.js","App.js","index.js"],"names":["GoodMovie","storageKey","deleteGood","id","JSON","parse","localStorage","getItem","poster_img","title","className","src","alt","onClick","e","removeItem","icon","faTrashAlt","FilterNav","filterBtn","target","nodeName","parentNode","faThumbsUp","faSplotch","faPlay","faHeart","DisplayMovieMap","result","getMovieID","poster_path","release_date","split","DisplayMovie","filterType","results","detail","goodBtn","useState","state","del","setDel","currentPage","dataAll","Object","keys","map","MovieSearch","searchData","text","setText","faTicketAlt","onChange","value","type","placeholder","preventDefault","faSearch","MovieGenre","genre","MovieVideos","vote","MovieDetail","details","closeDetail","videos","console","log","good","setState","null_img","backdrop_img","backdrop_path","faTimesCircle","genres","name","runtime","vote_average","overview","setItem","stringify","AlertModal","alertShow","alertMsg","App","API_KEY","process","alert","movie","setMovie","a","targetBtn","fetch","response","json","data","searchDataMovie","search_data","search_response","search_response_data","length","setTimeout","id_response","video_response","id_response_data","video_response_data","useEffect","movieid","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fe606ede.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport {  } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faTrashAlt } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nfunction GoodMovie({storageKey, deleteGood}){\r\n\r\n    const id = JSON.parse(localStorage.getItem(storageKey)).id;\r\n    const poster_img = JSON.parse(localStorage.getItem(storageKey)).poster_img;\r\n    const title = JSON.parse(localStorage.getItem(storageKey)).title;\r\n\r\n    const cancleClick = (e) => {\r\n        localStorage.removeItem(id);\r\n        deleteGood();\r\n    }\r\n    return(\r\n        <div className=\"movies\">\r\n            <img className=\"moviePoster\" src={poster_img} alt={title}></img>\r\n            <div className=\"movieTitle\">\r\n                <p>{title}</p>\r\n            </div>\r\n            <button className=\"deleteButton\" onClick={cancleClick}><FontAwesomeIcon icon={faTrashAlt}/></button>\r\n        </div>\r\n    );\r\n} \r\n\r\nexport default GoodMovie;\r\n","import React from \"react\";\r\nimport { faThumbsUp, faHeart, faSplotch, faPlay } from \"@fortawesome/free-solid-svg-icons\";\r\nimport {  } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport GoodMovie from './GoodMovie';\r\n\r\nfunction FilterNav({filterBtn}) {\r\n\r\n    const onClick = (e) => {\r\n        if(e.target.nodeName==='BUTTON'||e.target.nodeName==='DIV'){\r\n            filterBtn(e.target.className);\r\n        }else{\r\n            if(e.target.nodeName==='svg'){\r\n                filterBtn(e.target.parentNode.className);\r\n                // path\r\n            }else{\r\n                filterBtn(e.target.parentNode.parentNode.className);\r\n            }\r\n        }\r\n    }\r\n    return(\r\n        <>\r\n            <div className=\"navContainer\">\r\n                <button onClick={onClick} className=\"popular\">\r\n                    <FontAwesomeIcon icon={faThumbsUp}/>\r\n                    <div className=\"popular\">인기</div>\r\n                </button>\r\n                <button onClick={onClick} className=\"top_rated\">\r\n                    <FontAwesomeIcon icon={faSplotch}/>\r\n                    <div className=\"top_rated\">좋은평가</div>\r\n                    {/* <div className=\"top_rated\">Rated</div> */}\r\n                </button>           \r\n                <button onClick={onClick} className=\"now_playing\">\r\n                    <FontAwesomeIcon icon={faPlay}/>\r\n                    <div className=\"now_playing\">상영중</div>\r\n                    {/* <div className=\"now_playing\">Playing</div> */}\r\n                </button>\r\n                <button onClick={onClick} className=\"good\">\r\n                    <FontAwesomeIcon icon={faHeart}/>\r\n                    <div className=\"good\">좋아요</div>\r\n                </button>\r\n            </div>\r\n        </>\r\n    );\r\n} \r\n\r\nexport default FilterNav;","import React from \"react\";\r\n\r\nfunction DisplayMovieMap({result, getMovieID}) {\r\n    \r\n    const null_img = \"http://collaboparty1004.cafe24.com/xe/files/attach/images/139/483/d8c711f2e76e6be056d911b8fbed47fd.jpg\";\r\n    const poster_img = result.poster_path===null?null_img:`https://image.tmdb.org/t/p/original/${result.poster_path}`;\r\n\r\n    const onGetMovieID = () => {\r\n        getMovieID(result.id);\r\n    }\r\n    return(\r\n        <div className=\"movies\" onClick={onGetMovieID}>\r\n            <img className=\"moviePoster\" src={poster_img} alt={result.title}></img>\r\n            <div className=\"releaseDate\">{result.release_date.split('-')[0]}</div>\r\n            <div className=\"movieTitle\">\r\n                <p>{result.title}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DisplayMovieMap;","import React, { useState } from \"react\";\r\nimport DisplayMovieMap from \"./DisplayMovieMap\";\r\nimport GoodMovie from './GoodMovie';\r\n\r\nfunction DisplayMovie({filterType, results, detail, getMovieID, goodBtn}) {\r\n    const [del, setDel] = useState({\r\n        state:false,\r\n    })\r\n    // const movie_image = `https://image.tmdb.org/t/p/original/${}`;\r\n    let currentPage = \"\";\r\n    if(filterType==='popular'){\r\n        currentPage = \"인기 있는 영화\";\r\n    }\r\n    else if(filterType==='top_rated'){\r\n        currentPage = \"좋은 평가 영화\";\r\n    }\r\n    else if(filterType==='now_playing'){\r\n        currentPage = \"상영중인 영화\";\r\n    }\r\n    else if(filterType==='good'){\r\n        currentPage = \"좋아하는 영화\";\r\n    }else {\r\n        currentPage = \"'\" + filterType + \"'\" + \" 에 대한 결과\";\r\n    }\r\n\r\n    const dataAll = Object.keys(localStorage);\r\n\r\n    const deleteGood = () => {\r\n        setDel({state:!del.state});\r\n    }\r\n    \r\n    if(goodBtn===true){\r\n        \r\n        return (\r\n        <div className=\"movieContainer\">\r\n            <h1 className=\"currentPage\">{currentPage}</h1>\r\n            {dataAll.map((storageKey)=> {\r\n                return <GoodMovie deleteGood={deleteGood} storageKey={storageKey}></GoodMovie>\r\n            })}\r\n        </div>\r\n        );\r\n    }else{\r\n        return(\r\n            <div className=\"movieContainer\">\r\n            <h1 className=\"currentPage\">{currentPage}</h1>\r\n            <>\r\n                {results.map((result)=>{\r\n                    return <DisplayMovieMap\r\n                    key={result.id}\r\n                    result={result}\r\n                    detail={detail}\r\n                    getMovieID={getMovieID}\r\n                    ></DisplayMovieMap>\r\n                })}\r\n            </>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DisplayMovie;","import React, {useState} from \"react\";\r\nimport { faSearch, faTicketAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nfunction MovieSearch({searchData}) {\r\n\r\n    const [text, setText] = useState('');\r\n\r\n    const onChange = (e) => {\r\n        setText(e.target.value);\r\n    }\r\n    \r\n    const onClick = (e) => {\r\n        e.preventDefault();\r\n        searchData(text);\r\n        setText('');\r\n    }\r\n\r\n    return(\r\n        <>\r\n        <div className=\"headerContainer\">\r\n            <button className=\"logo\"><FontAwesomeIcon icon={faTicketAlt}/></button>\r\n            <form className=\"headerSearch\">\r\n                <input onChange={onChange} type=\"text\" value={text} placeholder=\"\"></input>\r\n                <button onClick={onClick} ><FontAwesomeIcon icon={faSearch}/></button>\r\n            </form>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default MovieSearch;","import React from \"react\";\r\n\r\nfunction MovieGenre({genre}) {\r\n    return(\r\n        <span>{genre} </span>\r\n    );\r\n}\r\n\r\nexport default MovieGenre;","import React from \"react\";\r\n\r\nfunction MovieVideos({id, title, poster_path, getMovieID, vote, release_date}) {\r\n\r\n    const null_img = \"http://collaboparty1004.cafe24.com/xe/files/attach/images/139/483/d8c711f2e76e6be056d911b8fbed47fd.jpg\";\r\n    const poster_img = poster_path===null?null_img:`https://image.tmdb.org/t/p/original/${poster_path}`;\r\n\r\n    const onGetMovieID = () => {\r\n        getMovieID(id);\r\n    }\r\n    return(\r\n        <div className=\"movies\" onClick={onGetMovieID}>\r\n            <img className=\"similarPoster\" src={poster_img} alt={title}></img>\r\n            <div className=\"inPosterText\">\r\n                <div className=\"inPosterTextTitle\">{title}</div>\r\n                <div className=\"inPosterTextVote\">★ {vote} / 10</div>\r\n            </div>\r\n            <div className=\"releaseDate\">{release_date.split('-')[0]}</div>\r\n            <div className=\"movieTitle\">\r\n                <p>{title}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MovieVideos;","import React, { useState } from \"react\";\r\nimport MovieGenre from \"./MovieGenre\";\r\nimport MovieVideos from \"./MovieVideos\";\r\n\r\n// import { faTimesCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faTimesCircle,faHeart } from \"@fortawesome/free-regular-svg-icons\";\r\nimport {  } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nfunction MovieDetail({details, closeDetail, videos, getMovieID}) {\r\n    console.log(videos.results);\r\n\r\n    const [state, setState] = useState({\r\n        id:'',\r\n        good:false,\r\n    })\r\n    const null_img = \"http://collaboparty1004.cafe24.com/xe/files/attach/images/139/483/d8c711f2e76e6be056d911b8fbed47fd.jpg\";\r\n    const poster_img = details.poster_path===null?null_img:`https://image.tmdb.org/t/p/original/${details.poster_path}`;\r\n    const backdrop_img = details.backdrop_path===null?null_img :`https://image.tmdb.org/t/p/original/${details.backdrop_path}`;\r\n\r\n    \r\n    const onClick = (e) => {\r\n        closeDetail();\r\n    }\r\n    const deleteLocal = () => {\r\n        localStorage.removeItem(state.id);\r\n        setState({id:'',good:false});\r\n    }\r\n    const pushLocal = () => {\r\n        localStorage.setItem(details.id, JSON.stringify({\r\n            id:details.id,\r\n            title:details.title,\r\n            poster_img:poster_img,\r\n        }));\r\n        setState({id:details.id, good:true});\r\n\r\n    }\r\n    return(\r\n        // detail 페이지 부분\r\n        <div className=\"detailContainer\">\r\n            <section className=\"backdropContainer\"> \r\n                <img className=\"backdropImg\" src={backdrop_img} alt={details.title}></img>\r\n            </section>\r\n            <section>\r\n                <div className=\"movieDetail\">\r\n                <img className=\"detailImg\" src={poster_img} alt={details.title}></img>\r\n                \r\n                <button className=\"closeBtn\" onClick={onClick}><FontAwesomeIcon icon={faTimesCircle}/></button>            \r\n                <div className=\"detailInfo\">\r\n                    <div className=\"detailTitle\">{details.title}</div>\r\n                    <div className=\"detailGenres\">\r\n                        <span>장르 : </span>\r\n                        <span>{details.genres.map((genre)=>{\r\n                            return <MovieGenre key={genre.id} genre={genre.name}></MovieGenre>\r\n                        })}</span>\r\n                    </div>\r\n                    <div className=\"detailRuntime\">\r\n                        <span>상영 시간 : </span>\r\n                        <span>{details.runtime} 분</span>\r\n                    </div>\r\n                    <div className=\"detailDate\">\r\n                        <span>개봉일 : </span>\r\n                        <span>{details.release_date}</span>\r\n                    </div>\r\n                    <div className=\"detailVote\">평점 : {details.vote_average} / 10</div>\r\n                    <div className=\"detailOverviewTitle\">개요</div>\r\n                    <div className=\"detailOverview\">{details.overview}</div>\r\n                    <span>{state.good?<button className=\"fillHeart\" onClick={deleteLocal}>❤</button>:\r\n                    <button className=\"emptyHeart\" onClick={pushLocal}><FontAwesomeIcon icon={faHeart}/></button>}\r\n                    </span>\r\n                    <span> 이 영화가 마음에 들어요  </span>                     \r\n                </div>\r\n                </div>\r\n            </section>\r\n            <section>\r\n                <div className=\"inSection\">\r\n                        <h1 className=\"videosh1\">관련 영상</h1>\r\n                        <div className=\"swiper-container\">\r\n                            <div className=\"videos\">\r\n                                {videos.results.map((result) => {\r\n                                    return <MovieVideos\r\n                                    id={result.id}\r\n                                    title={result.title}\r\n                                    poster_path={result.poster_path}\r\n                                    vote={result.vote_average}\r\n                                    release_date={result.release_date}\r\n                                    getMovieID={getMovieID}></MovieVideos>\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MovieDetail;","import React from \"react\";\r\n\r\nfunction AlertModal({alertShow, alertMsg}) {\r\n    return(\r\n      <>\r\n        <div className={alertShow?\"modalDiv modalActive\" :\"modalDiv\"}>\r\n          <span className=\"modalText\">{alertMsg}</span>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\nexport default AlertModal;","import React, {useState, useEffect } from 'react';\nimport FilterNav from './components/FilterNav';\nimport DisplayMovie from './components/DisplayMovie';\nimport MovieSearch from './components/MovieSearch';\nimport MovieDetail from './components/MovieDetail';\nimport AlertModal from './components/AlertModal';\nimport GoodMovie from './components/GoodMovie';\n\nfunction App() {\n\n  const API_KEY = process.env.REACT_APP_API_KEY;\n  const [movie, setMovie] = useState({\n    filterType : '',\n    results: [],\n    detail: false,\n    id:'',\n    details:[],\n    alert:false,\n    alertMsg:'',\n    goodBtn:false,\n    videos:[],\n  })\n\n  // filter button 을 누르면 popular, top rated, now playing 중에 해당하는 value 값을 가져와서(name) targetBtn에 저장\n  const filterBtn = async (name) => {\n    const targetBtn  = name;\n    if(targetBtn==='good'){\n       setMovie({...movie, detail:false, filterType:targetBtn, goodBtn:true});\n    }else{\n      const response = await fetch(`https://api.themoviedb.org/3/movie/${targetBtn}?api_key=${API_KEY}&language=ko&page=1`);\n\n      const data = await response.json();\n      setMovie({...movie, filterType:targetBtn, results:data.results, detail:false, goodBtn:false});\n    }\n\n  }\n\n  // 검색창에 입력한 값(data)를 searchDataMovie로 전달\n  const searchData = (data) => {\n    searchDataMovie(data);\n  } \n\n  // 검색창에 입력한 값을 search_data로 받음\n  // 0자 이하면 please.. 모달 창 보여줌\n  // 1자 이상일 때는 api 호출하고 해당하는 영화가 없으면 movie not fount 모달 창 보여주고\n  // 해당하는 영화가 있으면 setMovie로 해당하는 영화들에 대한 정보를 results 에 저장\n  const searchDataMovie = async (search_data, e) => {\n      try{\n        const search_response = await fetch(`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=ko&query=${search_data}&page=1&include_adult=false`);\n\n        const search_response_data = await search_response.json();\n        \n        if(search_response_data.results.length>0){\n          setMovie({...movie, results:search_response_data.results, detail:false, goodBtn:false, filterType:search_data});\n        }else{\n          setMovie({...movie, alert:true, alertMsg:\"Movie not found\"});\n          setTimeout(()=>{\n            setMovie({...movie, alert:false});\n          },2000);\n        }\n      }catch(error){\n        console.log(error);\n        setMovie({...movie, alert:true, alertMsg:\"Please enter the title\"});\n        setTimeout(()=>{\n          setMovie({...movie, alert:false});\n        },2000);;\n      }\n  }\n\n  // const showDetail = () => {\n  //   setMovie({...movie, detail:true});\n  // };\n\n  // x 버튼을 누르면 detail 페이지 종료\n  const closeDetail = () => {\n    setMovie({...movie, detail:false});\n  };\n  \n  // 내가 누른 영화의 아이디 값을 전달 받은거임\n  // detail을 true 로 바꿔주면서 해당 영화의 detail 페이지를 보여줌\n  const getMovieID = async(id) => {\n      \n    const id_response = await fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=ko`);\n    const video_response = await fetch(`https://api.themoviedb.org/3/movie/${id}/similar?api_key=${API_KEY}&language=ko&page=1`);\n\n    const id_response_data = await id_response.json();\n    const video_response_data = await video_response.json();\n\n    setMovie({...movie, details:id_response_data, detail:true, id:id, goodBtn:false, videos:video_response_data });\n  }\n\n  // 제일 처음 화면에는 popular 목록들을 보여줌\n  // Didmount\n  useEffect(()=> filterBtn('popular'),[]);\n\n  return (\n    <>\n    <AlertModal\n    alertShow={movie.alert}\n    alertMsg={movie.alertMsg}\n    ></AlertModal>\n    <header>\n      <MovieSearch \n      searchData={searchData}\n      ></MovieSearch>\n    </header>\n    <main>\n      <aside>\n        <FilterNav \n        filterBtn={filterBtn}\n        ></FilterNav>\n      </aside>\n      <article>\n        {movie.detail?\n        <MovieDetail\n        details={movie.details}\n        movieid={movie.id}\n        videos={movie.videos}\n        getMovieID={getMovieID}\n        closeDetail={closeDetail}\n        ></MovieDetail>:\n        <DisplayMovie \n        filterType={movie.filterType}\n        results={movie.results}\n        detail={movie.detail}\n        getMovieID={getMovieID}\n        goodBtn={movie.goodBtn}\n        ></DisplayMovie>}\n      </article>\n    </main>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './style.css';\nimport { BrowserRouter } from \"react-router-dom\";\n\n\nReactDOM.render(<App />,document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}